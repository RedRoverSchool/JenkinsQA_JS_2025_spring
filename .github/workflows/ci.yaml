name: Cypress Tests

on:
  pull_request:
    branches: [main]

  workflow_dispatch:

permissions: write-all

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - name: Create matrix âŠ¹
        id: prepare
        uses: bahmutov/gh-build-matrix@main
        with:
          n: 1

      - name: Print result ðŸ–¨
        run: echo '${{ steps.prepare.outputs.matrix }}'

  run-test:
    needs: prepare
    timeout-minutes: 25
    if: always()
    name: 'Run tests ${{ github.actor }} ${{ github.event_name }} - ${{ github.sha }}'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}

    steps:
      - name: Git clone
        uses: actions/checkout@v4

      - name: Print GitHub strategy context ðŸ–¨
        run: echo '${{ toJSON(strategy) }}'

      - name: Check for duplicated file names
        run: |
          git ls-files --exclude-standard --others --cached --no-empty-directory | sort -f > files.txt
          uniq -di files.txt > duplicates.txt
          if [[ -s duplicates.txt ]]; then
            echo "Found files with the same name:"
            cat duplicates.txt
            exit 1
          fi

      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'npm'

      - name: Install dependencies and cache them
        uses: cypress-io/github-action@v6
        with:
          runTests: false

      - name: Catch "it.only" ðŸ«´
        id: check-only
        run: npm run stop-only

      - name: Prepare Jenkins data
        run: |
          cat ${{ github.workspace }}/jenkins_data/jenkins_home.tar.0* > ${{ github.workspace }}/jenkins_backup.tar
          md5sum ${{ github.workspace }}/jenkins_backup.tar

      - name: Extract Jenkins data and set permission
        run: |
          tar -xvf ./jenkins_backup.tar
          chmod -R 777 ./jenkins_home

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker start
        run: docker run --rm --detach -p 8080:8080 -p 50000:50000 -v ${{ github.workspace }}/jenkins_home:/var/jenkins_home jenkins/jenkins:2.462.3-lts-jdk17

      - name: Wait for the Jenkins
        run: chmod +x ./.github/wait-for-jenkins.sh

      - name: Write the cypress.env.json
        run: |
          echo '${{ secrets.CYPRESS_LOGIN_CREDENTIALS }}' > ./cypress.env.json

      - name: Run Cypress tests ðŸ§ª
        id: cypress-tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          browser: chrome
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@v1.11
        with:
          gh_pages: gh-pages
          allure_results: allure-results
          allure_history: allure-history
          allure_report: allure-report

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure report
          path: allure-report
          if-no-files-found: ignore

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Upload screenshots Results
        id: upload-screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-${{strategy.job-index }}
          path: cypress/screenshots
          if-no-files-found: ignore
          retention-days: 1

      - name: Add the workflow status back to PR comment
        continue-on-error: true
        uses: mshick/add-pr-comment@v2
        if: (contains(fromJSON('["pull_request"]'), github.event_name))
        with:
          message-success: |
                  Workflow successfully completed
          message-failure: |
                  Workflow failed